This is a document for plugin developers on how to create a plugin that will
skin Miranda. You should have read pluginspec.txt first.

There are two parts to skinning:
- The main window
- Dialog boxes

Note that I explicitly changed a few bits of Miranda so that a skinner can be
compatible with icqplus skins if it so desires.

The main window
~~~~~~~~~~~~~~~
To skin the main window you need to replace and re-write the miranda32/ui/clui
module. I tried my best to keep the amount of work required to do this as small
as possible, but it's still fairly big because you need to do all the window
drawing and contact list drawing.

You should thoroughly familiarise yourself with the contents of
ui/contactlist/m_clist.h and ui/clui/m_clui.h. Your plugin must #include
m_clui.h and fully implement all the services it documents.

The built-in ui/clui is the canonical reference for how your plugin should
behave, but if you find yourself trawling through huge chunks of code to find
an answer then ask me about it on plugin-dev and I'll answer your question and
clarify the documentation.

Please don't implement features in your UI that really ought to be in the core
of Miranda (a good example is an auto-hide contact list). I want to keep clui
as small as possible and purely dedicated to window rendering. When stuff like
this is put in the core, any custom clui should work with the change and use it
without any action by the plugin developer.

Addendum during 0.1.2.1: The new CList Control is the thingy that renders the
contact list wherever it's needed throughout Miranda. Having changed CLUI to
use the CLC it's now not a particularly good example of how to do it if you
don't use the CLC. Get the code .zip from version 0.1.2.0 for the long-winded
way, or I may release the old stuff as a plugin if I get really bored or
there's sufficient demand.

Dialog boxes
~~~~~~~~~~~~
Dialog boxes should be done the normal skinning way, using either a CBT hook
and subclassing, or a complete message hook. Look up SetWindowsHookEx() and
SetWindowLong(), or the good technical article on the MSDN called 'safe
subclassing in win32'. There's also a tech art on hooks in the same place, I
see. I haven't read it, though, so I don't know if it's any good.
