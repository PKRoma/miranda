TODO
----


Disclaimer
----------
The following is a list of todo items for Miranda.  This list is subject
to change and is only used as a guide and is not written in stone.  Todo
items may be add/removed/changed/moved at any time without notice.  Also,
this todo list may not be 100% accurate.


0.3.0.0
-------
Patches:
 [x] Delete users with del key
 [ ] Set NA mode automatically only from Auto Away
 [ ] New runtime menu module (remove frame dependancy)
 [x] Remember lastprotocol searched
 [ ] Util_Save/RestoreWindowPosition should save max state (problems with SW_SHOWNORMAL)
 [ ] IsWindowVisible Patch

General:
 [ ] Pseudo contacts (to be used for temp contacts or possibly group chat contacts, etc)
 [x] Add a force authorization option as some protocols (like jabber) require this.
 [ ] Multi accounts, ability to have several accounts with a single protocol plugin. 
 [ ] Create mulitple option types: Contact Options, Network Configuration, Appearance, Accounts 
     (see later), etc.  These options would be separated and use the same options page layout
     that is currently used but be separated (using a Settings menu item and the options being a submenus).
 [ ] Create account manager to manage logins to different protocols.
 [ ] Contact options. One of the ideas behind the current option layout was to keep all 
     options in one place. But I think its time to rethink this, many plugins need contact 
     specific settings and its not very convenient to create a bunch of user lists in the 
     main option just control these settings. I believe it will be more user friendly to 
     bring up contact settings dialogs through the contact context menus. 

ICQ:
 [ ] Move ICQ login inside of first run to icq module/plugin
 [ ] Temporary contacts appear in the contact list (caused by ICQ packet?)
 [x] Move ICQ to a external plugin
 [ ] Remove icq protocol dependancy assumptions in: 
        [ ] message dialog
        [x] clc.c: ContactListControlWndProc
	[x] clcitems.c: AddContactToGroup
	[x] clisttray.c: TrayIconInit/TrayIconUpdateBase
        [x] findadd.c
        [ ] searchresults.c
        [x] userinfo.c
        [x] stdinfo.c
   	[x] IDC_TITLETEXT in cluiopts.c for the titlebar
	[x] nameOrderDescr in clistops.c uses ICQ# as a preference.
	[ ] more?
 [ ] Add service to obtain idle time for contacts.
 [ ] Add re-request authorization menu item for contacts waiting on authorization.  The icq tab 
     should also show if the user is awaiting authorization.
 [x] Add option to set your Authorization settings under ICQ Privacy
 [ ] ICQ should send multirecipient messages when more than one user is selected
 [x] Remove the ping from the icq tab.
 [ ] Serverside groups 
 [ ] Renaming of serverside contacts 
 [ ] Newly added contacts appear offline bug
 [ ] Lots of other minor protocol corrections 

Database:
 [ ] Fix the "future" messages problem
 [ ] Rewrite DBEvents blob format for all known events.  The first byte sets the size of the 
     data and the next x bytes will be the data.  This allows for expandable blob formats that 
     are more fault tolerant than the current blob format (which isn't fault tolerant at all).  
     It also allows you to use a string for the UIN for example.  This means each protocol can
     make use of all fields, and not be stuck using icq formats. Also, you can verify if data 
     is outside the blob".  
 [ ] Clearly document all blob formats

Send/Receive:
 [x] Add Recieve URL option to open in a new window or current window.  Make the open button a dropdown button.

Contact List:
 [ ] Ability to add groups without turning of hide empty groups (for use in plugins)
 [ ] Add option to hide "(Unknown Contact)"'s.
 [x] In GetContactDisplayName in clistsettings.c, if getting the hContact is NULL it gets 
     the username from the ICQ settings. The message dialogs always show the users icq nickname
     no matter what protocol they are sending a message to.  I propose we add another service that
     passes the hcontact and protocol, then retreives the nick of that protocol.  The current
     service will then use that service assuming it doesn't have a Clist/MyHandle.  This would also fix 
     the problem with the messagedialog using Clist/MyHandle for the NULL user and showing strange
     text (whatever is in the setting).

Send/Recieve:
 [ ] Overall improvements to the message dialog
 [x] Add protocol getcaps to get the and the unique id, to be used for the message dialog.  (this is
     now supported, it will be put in the new message dialog that uses the session api).

Icons/Skin:
 [ ] Dynamic icon loading for systray icons (use low-color if needed)

Bugs:
 [x] Background color of 'M' menu in contact list on XP is incorrect
 [ ] Reduce bug count to <100 
 [ ] Fix Window docking
 [x] Grey out title bar text option when disabling titlebar
 [x] Add XP style support to Find/Add more options button, url/file recieve button, etc.


0.4.0.0
-------
Defunc/stuff to be deleted:
	[ ] usage of PROTOCOLTYPE_FILTER (Registering a filter as a protocol)
	[ ] Protocol chains used under each contact for MS_PROTO_CHAINSEND/RECV for
	    messages, leave support in for urls, files, etc.
	[ ] Send/Recv Module (single mode, split mode)
GCAPI:
	AVL trees:
	[x] node insertion with updating balance factors and rebalance
	[x] node search (non-recursive)
	[ ] node deletion with updating balance factors and rebalance
	Sessions:
	[x] Get " Mersenne Twister " PRNG to generate handles that are stored
		in a BST node, so that handles are generated uniformly and randomly
		keeping freed handles is not a problem and exhaustion of handle indexes
		never happens for association with actual object data
	[ ] switch session handle creation to use the AVL code
	[ ] Reimplement creation of a session handle to send a single message
	    to both a protocol and UI component at once
	[-] Use AVL tree code to implement a fast user lookup to associate
	    with a unique user-id and protocol
	[-] Figure out how to deal with insertion of contacts, should the
	    protocol tell the session manager as well as the UI? or just the session
		manager alone?
	PDB:
	[ ]	Make Cache_GetSpace() use offsets and space information taken in
		Cache_FreeSpace() so that new space is not created until old space has
		been wasted.
	[ ] Recompact the entire cache file when a threshold of wasted structural
		information is present (i.e. recompacting)
	[ ] Store a group chain as the highest form of storage (i.e. NULL group is
	    a contact chain)
	Filters:
	[ ] Use the FILTER module to implement message pathways between a protocol
	    and UI component instead of directly sending the message without others
		getting a chance
	[ ] Remove single type registration and give plugins the chance to register
	    either as a type of filter or at a level.
	Misc:
	[ ] Get a life, and a spare.
	
UI:
 [ ] General purpose chat dialog

[x] = Fixed/Implemented