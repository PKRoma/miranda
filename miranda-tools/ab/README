ab "Automatic nightly Builder"

Prerequisites:

	python 2.2.xx (installed at c:\python\, if not edit go.bat)
	perl x.xx (installed anywhere, must be on PATH, called as perl, must be enough to run cvs2cl.pl)
	cvs from Tortious CVS (including plink from there, PuTTY versions may work)
	mingw (any recent version, must be installed in c:\mingw\bin, msys is not needed)
	MSVC++ (must be on your path! msdev -h should work)
	PuTTY's psftp (putty secure ftp)
	
Quick start:

	Open vars.py and edit USER= to be your SF user name, edit PASSWORD file to be your SF password.

	Run go.bat, Wait.
	
FileList:
	
	fetch.py				- main bulk of code, see fetch.py
	package.py				- checks for generated binaries and packs them into zips.
	package_src.py			- creates a zip version of all source *before* compiling, strips out CVS info
	cvs.bat					- this redirects to util/cvs.exe, so paths don't need to be fucked with
	cvs2cl.pl				- perl script to connect to cvs and create a nice changelog.
	PASSWORD				- contains your SF password
	index.php				- autogenerated index page
	upload.cmd				- autogenerated upload commands needed to put the files on SF.
	mrpage.py				- script to generate index.php from template_index.tpl
	vars.py					- contains global shared vars
	DEVELNOTES				- file to be injected into index.php under 'Developer Notes'
	
	zip/
		will contain miranda_YYYYMMDD.zip, miranda_YYYYMMDD_debug.zip, miranda_src.zip
	
	util/
		cvs.exe				- cvs.exe from Tortious
		ext_protocol.dll	- " "
		tp.bat				- redirects to python script (since Enviroment var wont accept args)
		tp.exe				- putty link
		tp.py				- invokes tp.exe with passed args and password stuff
		
	Bin/Debug, Bin/Release  - contains Miranda + plugins in both release/debug states
	
	zip/					- will contain three zips
	
	ChangeLog				- will be generated by cvs2cl.pl
		
fetch.py:

	This script, checks out Miranda-IM, Protocols, Plugins from the CVS and then uses package_src.py to create
	a zip of all the sources *without* CVS entries. Perl will then be invoked to create a ChangeLog from cvs logs,
	its done in perl since the Python script for CvsGui has some module issues (which I don't wanna bother with atm).
	
	It then builds everything using MSVC++, Yahoo is built using Mingw. Every sub project is built in "Release" and
	"Debug" mode flavours. Mingw's path is hardcoded and the script will switch to that path by itself.
	
	Once all the files are built, package.py is used to generate the two zips (one debug, one release)
	upload.py (now merged in fetch.py) will use psftp to upload all files using a secure ftp with compression
	
